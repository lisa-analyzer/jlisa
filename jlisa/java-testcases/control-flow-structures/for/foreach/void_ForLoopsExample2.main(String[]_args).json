{"name":"void ForLoopsExample2::main(String[] args)","description":null,"nodes":[{"id":0,"subNodes":[1,2],"text":"==(true, hasNextElementForEach(args))"},{"id":1,"text":"true"},{"id":2,"subNodes":[7],"text":"hasNextElementForEach(args)"},{"id":4,"subNodes":[5,6],"text":"arg = getNextElementForEach(args)"},{"id":5,"text":"arg"},{"id":6,"subNodes":[7],"text":"getNextElementForEach(args)"},{"id":7,"text":"args"},{"id":8,"subNodes":[9,11],"text":"println(System::out, arg)"},{"id":9,"subNodes":[10],"text":"System::out"},{"id":10,"text":"System"},{"id":11,"text":"arg"},{"id":12,"text":"ret"}],"edges":[{"sourceId":0,"destId":4,"kind":"TrueEdge"},{"sourceId":0,"destId":12,"kind":"FalseEdge"},{"sourceId":4,"destId":8,"kind":"SequentialEdge"},{"sourceId":8,"destId":0,"kind":"SequentialEdge"}],"descriptions":[{"nodeId":0,"description":{"expressions":["true == args"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":1,"description":{"expressions":["true"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":2,"description":{"expressions":["args"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":4,"description":{"expressions":["arg"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"arg":["untyped"],"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"&pp@'for-2.java':2:28":"[-Inf, +Inf]","arg":"[-Inf, +Inf]","heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":5,"description":{"expressions":["arg"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"&pp@'for-2.java':2:28":"[-Inf, +Inf]","heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":6,"description":{"expressions":["args"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"&pp@'for-2.java':2:28":"[-Inf, +Inf]","heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":7,"description":{"expressions":["args"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"&pp@'for-2.java':2:28":"[-Inf, +Inf]","heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":8,"description":{"expressions":["open_call_ret_value@'for-2.java':5:3"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"arg":["untyped"],"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"&pp@'for-2.java':2:28":"[-Inf, +Inf]","arg":"[-Inf, +Inf]","heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":9,"description":{"expressions":["*(System)->out"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"arg":["untyped"],"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"&pp@'for-2.java':2:28":"[-Inf, +Inf]","arg":"[-Inf, +Inf]","heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":10,"description":{"expressions":["System"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"arg":["untyped"],"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"&pp@'for-2.java':2:28":"[-Inf, +Inf]","arg":"[-Inf, +Inf]","heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":11,"description":{"expressions":["arg"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"arg":["untyped"],"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"&pp@'for-2.java':2:28":"[-Inf, +Inf]","arg":"[-Inf, +Inf]","heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}},{"nodeId":12,"description":{"expressions":["skip"],"state":{"heap":{"args":["heap[s]:pp@'for-2.java':2:28"]},"type":{"args":["String[]*"],"heap[s]:pp@'for-2.java':2:28":["String[]"],"heap[s]:pp@'for-2.java':2:28[len]":["int"]},"value":{"heap[s]:pp@'for-2.java':2:28[len]":"[-Inf, +Inf]"}}}}]}