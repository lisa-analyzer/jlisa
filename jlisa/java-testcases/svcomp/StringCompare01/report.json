{
  "warnings" : [ {
    "message" : "['Main.java':17:4] on 'void Main::main(java.lang.String*[]* args)': [EXPRESSION] DEFINITE: the assertion holds"
  }, {
    "message" : "['Main.java':21:4] on 'void Main::main(java.lang.String*[]* args)': [EXPRESSION] DEFINITE: the assertion holds"
  }, {
    "message" : "['Main.java':25:4] on 'void Main::main(java.lang.String*[]* args)': [EXPRESSION] DEFINITE: the assertion holds"
  }, {
    "message" : "['Main.java':28:4] on 'void Main::main(java.lang.String*[]* args)': [EXPRESSION] DEFINITE: the assertion holds"
  }, {
    "message" : "['Main.java':30:4] on 'void Main::main(java.lang.String*[]* args)': [EXPRESSION] DEFINITE: the assertion holds"
  }, {
    "message" : "['Main.java':32:4] on 'void Main::main(java.lang.String*[]* args)': [EXPRESSION] DEFINITE: the assertion holds"
  }, {
    "message" : "['Main.java':34:4] on 'void Main::main(java.lang.String*[]* args)': [EXPRESSION] DEFINITE: the assertion holds"
  }, {
    "message" : "['Main.java':36:4] on 'void Main::main(java.lang.String*[]* args)': [EXPRESSION] DEFINITE: the assertion holds"
  }, {
    "message" : "['Main.java':40:4] on 'void Main::main(java.lang.String*[]* args)': [EXPRESSION] DEFINITE: the assertion holds"
  }, {
    "message" : "['Main.java':45:4] on 'void Main::main(java.lang.String*[]* args)': [EXPRESSION] DEFINITE: the assertion holds"
  } ],
  "files" : [ "report.json", "void_Main.main(java.lang.String_[]__args).json" ],
  "info" : {
    "cfgs" : "13",
    "duration" : "31ms",
    "end" : "2025-10-07T15:43:46.064+02:00",
    "expressions" : "103",
    "files" : "1",
    "globals" : "23",
    "members" : "143",
    "programs" : "1",
    "start" : "2025-10-07T15:43:46.033+02:00",
    "statements" : "46",
    "units" : "48",
    "version" : "0.1",
    "warnings" : "10"
  },
  "configuration" : {
    "analysisGraphs" : "NONE",
    "descendingPhaseType" : "NONE",
    "dumpForcesUnwinding" : "false",
    "fixpointWorkingSet" : "OrderBasedWorkingSet",
    "glbThreshold" : "5",
    "hotspots" : "unset",
    "jsonOutput" : "true",
    "openCallPolicy" : "ReturnTopPolicy",
    "optimize" : "false",
    "recursionWideningThreshold" : "5",
    "semanticChecks" : "AssertChecker",
    "serializeInputs" : "false",
    "serializeResults" : "true",
    "shouldSmashError" : "unset",
    "syntacticChecks" : "",
    "useWideningPoints" : "true",
    "wideningThreshold" : "5",
    "workdir" : "java-outputs/svcomp/StringCompare01"
  }
}