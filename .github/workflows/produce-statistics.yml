name: Run analysis and produce statistics

on:
  pull_request:
    branches: master

jobs:
  produce-jlisa-distribution:
    runs-on: self-hosted
    outputs:
      dist-path: ${{ steps.dist.outputs.path }}
    steps:
      - name: Checkout jLiSA repo
        uses: actions/checkout@v4

      - name: Produce jLiSA distribution
        run: |
          docker build \
            --build-arg GPR_USER=${{ secrets.GPR_USER }} \
            --build-arg GPR_KEY=${{ secrets.GPR_KEY }} \
            -t produce-jlisa-distribution ./jlisa

      - name: Extract distribution
        id: dist
        run: |
          mkdir -p $GITHUB_WORKSPACE/jlisa_dist
          container_id=$(docker create produce-jlisa-distribution)
          docker cp $container_id:/artifacts/. $GITHUB_WORKSPACE/jlisa_dist
          docker rm $container_id
          echo "path=$GITHUB_WORKSPACE/jlisa_dist" >> $GITHUB_OUTPUT

  run-analysis:
    runs-on: self-hosted
    needs: produce-jlisa-distribution
    steps:
      - name: Checkout svh repo
        uses: actions/checkout@v4
        with:
          repository: lisa-analyzer/sv-comp
          ref: main
          path: svh
          token: ${{ secrets.READ_REPO_ACCESS_TOKEN }}

      - name: Copy jLiSA distribution into svh folder
        run: |
          cp -r ${{ needs.produce-jlisa-distribution.outputs.dist-path }}/* ./svh/

      - name: Build svh Docker image
        run: docker build -t svh ./svh

      - name: Prepare output directory
        run: mkdir -p $GITHUB_WORKSPACE/analysis_results/results

      - name: Run analysis
        run: |
          docker run --rm \
            --user $(id -u):$(id -g) \
            --mount type=bind,src=$GITHUB_WORKSPACE/analysis_results,dst=/app/output \
            svh

      - name: Read summary
        id: read_summary
        run: |
          if [ -f "$GITHUB_WORKSPACE/analysis_results/summary.txt" ]; then
            echo "summary<<EOF" >> $GITHUB_ENV
            cat "$GITHUB_WORKSPACE/analysis_results/summary.txt" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "summary=No summary file found" >> $GITHUB_ENV
          fi

      - name: Notify PR author
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            âœ… Analysis finished!  

            Summary:
            ${{ env.summary }}