name: Run analysis and produce statistics

on:
  pull_request:
    branches: development

jobs:
  produce-jlisa-distribution:
    runs-on: self-hosted

    steps:
    - name: Checkout jLiSA repo
      uses: actions/checkout@v4

    - name: Produce jLiSA distribution
      run: |
            docker build \
              --build-arg GPR_USER=${{ secrets.GPR_USER }} \
              --build-arg GPR_KEY=${{ secrets.GPR_KEY }} \
              -t produce-jlisa-distribution ./jlisa

    - name: Extract distribution artifact
      run: |
        container_id=$(docker create produce-jlisa-distribution)
        docker cp $container_id:/artifacts ./artifacts
        docker rm $container_id

    - name: Upload distribution artifact
      uses: actions/upload-artifact@v4
      with:
        name: jlisa-distribution
        path: artifacts/*.zip
        retention-days: 1

  run-analysis:
    runs-on: self-hosted
    needs: produce-jlisa-distribution

    steps:
    - name: Checkout svh repo
      uses: actions/checkout@v4
      with:
        repository: lisa-analyzer/sv-comp
        ref: main
        path: svh
        token: ${{ secrets.READ_REPO_ACCESS_TOKEN }}

    - name: Download and add jLiSA distribution into svh folder
      uses: actions/download-artifact@v4
      with:
        name: jlisa-distribution
        path: ./svh
    
    - name: Build svh Docker image
      run: docker build -t svh ./svh

    - name: Prepare output directory
      run: |
        mkdir -p $GITHUB_WORKSPACE/analysis_results/results

    - name: Run analysis
      run: |
        docker run --rm \
          --user $(id -u):$(id -g) \
          --mount type=bind,src=$GITHUB_WORKSPACE/analysis_results,dst=/app/output \
          svh
        
    - name: Upload analysis results artifact
      uses: actions/upload-artifact@v4
      with:
        name: analysis_results
        path: analysis_results
        retention-days: 1

    - name: Read summary
      id: read_summary
      run: |
        if [ -f "$GITHUB_WORKSPACE/analysis_results/summary.txt" ]; then
          echo "summary<<EOF" >> $GITHUB_ENV
          cat "$GITHUB_WORKSPACE/analysis_results/summary.txt" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        else
          echo "summary=No summary file found" >> $GITHUB_ENV
        fi

    - name: Notify PR author
      if: github.event_name == 'pull_request'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        message: |
          âœ… Analysis finished!  
          Artifact with results: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

          Summary:
          ${{ env.summary }}
  
  cleanup-artifacts:
    runs-on: ubuntu-latest
    needs: run-analysis

    steps:
      - name: Delete jlisa-distribution artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: jlisa-distribution

      - name: Keep only last 2 analysis_results artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '0 days'
          skip-recent: 2
          name: analysis_results